function r(r){return null!==r&&"object"==typeof r&&!1===Array.isArray(r)}export default function(t){var e=t.defaults,o=t.userOptions;void 0===o&&(o={});var i=t.warnPreffix;void 0===i&&(i="");var p=t.warnSuffix;if(void 0===p&&(p=""),!r(e))throw new TypeError("Expected defaults is required not null, not array object, got "+typeof e+" "+e);if(Object.keys(e).map(function(r){return{key:r,option:e[r]}}).forEach(function(t){var e=t.key,o=t.option;if(!r(o))throw new TypeError("Expected each default option is an object, got "+e+" is "+typeof o+" "+o);if(!Object.prototype.hasOwnProperty.call(o,"initial"))throw new TypeError("Expected "+e+" have initial property");if(!Object.prototype.hasOwnProperty.call(o,"description"))throw new TypeError("Expected "+e+" have description property");var i=o.description;if("string"!=typeof i)throw new TypeError("Expected "+e+" description is a string, got "+typeof i+" "+i);if(!Object.prototype.hasOwnProperty.call(o,"validator"))throw new TypeError("Expected "+e+" have validator property");var p=o.validator;if("function"!=typeof p)throw new TypeError("Expected "+e+" validator is a function, got "+typeof p+" "+p)}),!r(o))throw new TypeError("Expected userOptions is required not null, not array object, got "+typeof o+" "+o);if(void 0!==i&&"string"!=typeof i)throw new TypeError("Expected warnPreffix is optional string, got "+typeof i+" "+i);if(void 0!==p&&"string"!=typeof p)throw new TypeError("Expected warnSuffix is optional string, got "+typeof p+" "+p);var n={};for(var a in e){var f=e[a],y=f.initial,c=f.description,d=f.validator;if(n[a]=y,Object.prototype.hasOwnProperty.call(o,a)){var l=o[a];d(l)?n[a]=l:console.warn(i,"Expected "+a+" is "+c+", got "+typeof l+" "+l+".","Fallback to default value "+y+".",p)}}return n}
//# sourceMappingURL=merge-options.min.mjs.map
