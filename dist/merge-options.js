"use strict";function o(o,e){return Object.prototype.hasOwnProperty.call(o,e)}function e(e){var t=e.optionConfig,i=e.userOptions,r=void 0===i?{}:i,n=e.preffix,f=void 0===n?"":n,a=e.suffix,u=void 0===a?"":a,p=e.strict,d=void 0===p||p,c=function(o){return[f,o,u].join(" ")},s={};for(var l in t)if(o(t,l)){var g=t[l],v=g.required,y=g.default,b=g.description,x=g.validator,h=r[l],q=!!o(g,"required")&&("function"==typeof v?v(r):v),E=o(r,l),w=x(h,r);if(q){if(!E)throw new TypeError(c(l+" is required."));if(!w)throw new TypeError(c("Expected "+l+" to be "+b+", got "+typeof h+" "+h+"."));s[l]=h}else if(s[l]=y,E)if(w)s[l]=h;else{if(d)throw new TypeError(c("Expected "+l+" to be "+b+", got "+typeof h+" "+h+"."));console.warn(c("Expected "+l+" to be "+b+", got "+typeof h+" "+h+". Fallback to default value "+y+"."))}}return s}var t="[mergeOptions]:",i="\nCheck out documentation https://github.com/dubaua/merge-options#parameters-and-return";function r(o){return null!==o&&"object"==typeof o&&!1===Array.isArray(o)}function n(o){throw new TypeError([t,o,i].join(" "))}var f={optionConfig:{required:!0,validator:function(e){for(var t in e)if(o(e,t)){var i=e[t];if(r(i)||n("Expected optionConfig."+t+" to be an object with declarative option configuration, got "+typeof i+" "+i+"."),o(i,"required")){var f=i.required,a=typeof f;"boolean"!==a&&"function"!==a&&n("Expected optionConfig."+t+".required to be either boolean or function, got "+typeof f+" "+f+".")}else o(i,"default")||n("Expected optionConfig."+t+" to either have required or default value.");if(o(i,"default")||o(i,"required")||n("Expected optionConfig."+t+" to either have required or default value."),o(i,"description")){var u=i.description;"string"!=typeof i.description&&n("Expected optionConfig."+t+".description to be a string, got "+typeof u+" "+u+".")}else n("Missing description on optionConfig."+t+" config.");if(o(i,"validator")){var p=i.validator;"function"!=typeof i.validator&&n("Expected optionConfig."+t+".validator to be a function, got "+typeof p+" "+p+".")}else n("Missing validator on optionConfig."+t+" config.")}return r(e)},description:"an object with declarative option configuration"},userOptions:{required:!1,default:{},validator:r,description:"an object"},preffix:{required:!1,default:"",validator:function(o){return"string"==typeof o},description:"a string"},suffix:{required:!1,default:"",validator:function(o){return"string"==typeof o},description:"a string"},strict:{required:!1,default:!0,validator:function(o){return"boolean"==typeof o},description:"a boolean"}};module.exports=function(o){var r=e({optionConfig:f,userOptions:o,preffix:t,suffix:i});return e(r)};
//# sourceMappingURL=merge-options.js.map
