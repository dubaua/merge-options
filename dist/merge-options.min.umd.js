!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(0,function(){"use strict";function e(e){return null!==e&&"object"==typeof e&&!1===Array.isArray(e)}module.exports=function(t){var r=t.defaults,o=t.userOptions;void 0===o&&(o={});var i=t.warnPreffix;void 0===i&&(i="");var n=t.warnSuffix;if(void 0===n&&(n=""),!e(r))throw new TypeError("Expected defaults is required not null, not array object, got "+typeof r+" "+r);if(Object.keys(r).map(function(e){return{key:e,option:r[e]}}).forEach(function(t){var r=t.key,o=t.option;if(!e(o))throw new TypeError("Expected each default option is an object, got "+r+" is "+typeof o+" "+o);if(!Object.prototype.hasOwnProperty.call(o,"initial"))throw new TypeError("Expected "+r+" have initial property");if(!Object.prototype.hasOwnProperty.call(o,"description"))throw new TypeError("Expected "+r+" have description property");var i=o.description;if("string"!=typeof i)throw new TypeError("Expected "+r+" description is a string, got "+typeof i+" "+i);if(!Object.prototype.hasOwnProperty.call(o,"validator"))throw new TypeError("Expected "+r+" have validator property");var n=o.validator;if("function"!=typeof n)throw new TypeError("Expected "+r+" validator is a function, got "+typeof n+" "+n)}),!e(o))throw new TypeError("Expected userOptions is required not null, not array object, got "+typeof o+" "+o);if(void 0!==i&&"string"!=typeof i)throw new TypeError("Expected warnPreffix is optional string, got "+typeof i+" "+i);if(void 0!==n&&"string"!=typeof n)throw new TypeError("Expected warnSuffix is optional string, got "+typeof n+" "+n);var p={};for(var a in r){var f=r[a],c=f.initial,y=f.description,d=f.validator;if(p[a]=c,Object.prototype.hasOwnProperty.call(o,a)){var s=o[a];d(s)?p[a]=s:console.warn(i,"Expected "+a+" is "+y+", got "+typeof s+" "+s+".","Fallback to default value "+c+".",n)}}return p}});
//# sourceMappingURL=merge-options.min.umd.js.map
