"use strict";function o(o){return null!==o&&"object"==typeof o&&!1===Array.isArray(o)}module.exports=function(t){var r=t.options;void 0===r&&(r={});var e=t.defaults,i=t.target,a=t.warnPreffix;void 0===a&&(a="");var n=t.warnSuffix;if(void 0===n&&(n=""),!o(r))throw new TypeError("options is required and should be an object, got "+typeof r+" "+r+".");if(!o(e))throw new TypeError("defaults is required and should be an object, got "+typeof e+" "+e+".");if(Object.keys(e).map(function(o){return e[o]}).forEach(function(t){if(!o(t))throw new TypeError("default option should be an object, got "+typeof t+" "+t+".");if(!Object.prototype.hasOwnProperty.call(t,"initial"))throw new TypeError("default options should have initial value");if(!Object.prototype.hasOwnProperty.call(t,"description"))throw new TypeError("default options should have description");if("string"!=typeof t.description)throw new TypeError("default option description should be a string, got "+typeof t.description+" "+t.description);if(!Object.prototype.hasOwnProperty.call(t,"validator"))throw new TypeError("default options should have validator function");if("function"!=typeof t.validator)throw new TypeError("default option validator should be a function, got "+typeof t.validator+" "+t.validator)}),!o(i))throw new TypeError("target is required and should be an object, got "+typeof i+" "+i+".");if(void 0!==a&&"string"!=typeof a)throw new TypeError("warnPreffix should be a string, got "+typeof a+" "+a+".");if(void 0!==n&&"string"!=typeof n)throw new TypeError("warnSuffix should be a string, got "+typeof n+" "+n+".");for(var p in e){var f=e[p],l=f.initial,d=f.description,s=f.validator;if(i[p]=l,Object.prototype.hasOwnProperty.call(r,p)){var u=r[p];s(u)?i[p]=u:console.warn(a+"Expected "+p+" is "+d+", got %c"+typeof u,"font-style: italic; text-transform: capitalize",u+". Fallback to default value "+l+".",n)}}};
//# sourceMappingURL=merge-options.min.js.map
